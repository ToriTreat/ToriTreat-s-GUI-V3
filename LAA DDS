local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Toritreat's GUI V3",
    LoadingTitle = "Loading",
    LoadingSubtitle = "Please wait",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Create a custom folder for your hub/game
        FileName = "Treat"
    },
    Discord = {
        Enabled = true,
        Invite = "52fBmU7v", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
        RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
        Title = "Key System",
        Subtitle = "Please get the key from our discord",
        Note = "Key is needed",
        FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
        SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
        GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
        Key = {"Treats", "for kids"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

local Section = PlayerTab:CreateSection("Scripts")
Section:Set("Scripts")

Rayfield:Notify({
    Title = "Notification Title",
    Content = "Thanks for using our scripts!",
    Duration = 6.5,
    Image = 4483362458,
    Actions = { -- Notification Buttons
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
        }
    }
})

local Slider = PlayerTab:CreateSlider({
    Name = "Walkspeed",
    Range = {0, 400},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "Slider1",
    Callback = function(value)
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        if Humanoid then
            Humanoid.WalkSpeed = value
        end
    end
})

local Slider = PlayerTab:CreateSlider({
    Name = "JumpPower",
    Range = {0, 400},
    Increment = 10,
    Suffix = "Power",
    CurrentValue = 50,
    Flag = "Slider2", -- Changed flag to avoid conflict
    Callback = function(value)
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        if Humanoid then
            Humanoid.JumpPower = value
        end
    end
})

PlayerTab:CreateButton({
    Name = "Sit",
    Description = "Make your character sit (for fun)",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")

        if humanoid then
            humanoid.Sit = true
        end
    end
})

-- Textbox to type a player's name
PlayerTab:Textbox({
    Name = "Sit on Player",
    Callback = function(text)
        local targetPlayer = game.Players:FindFirstChild(text)
        if targetPlayer and targetPlayer.Character then
            local localPlayer = game.Players.LocalPlayer
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")

            if humanoid then
                local weld = Instance.new("Weld")
                weld.Part0 = character:FindFirstChild("HumanoidRootPart")
                weld.Part1 = targetPlayer.Character:FindFirstChild("Head")
                weld.C0 = CFrame.new(0, 2, 0)
                weld.Parent = character:FindFirstChild("HumanoidRootPart")
                humanoid.PlatformStand = true
                humanoid.Weld = weld -- Save the weld to remove it later
            end
        end
    end
})

-- Button to stop sitting on the player's head
PlayerTab:CreateButton({
    Name = "Stop Sitting",
    Description = "Stop sitting on the player's head",
    Callback = function()
        local localPlayer = game.Players.LocalPlayer
        local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")

        if humanoid and humanoid.Weld then
            humanoid.Weld:Destroy()
            humanoid.PlatformStand = false
            humanoid.Weld = nil
        end
    end
})

local Tab = Window:CreateTab("Scripts", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
    Name = "Infinity yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        -- The function that takes place when the button is pressed
    end
})

local Button = Tab:CreateButton({
    Name = "Fates admin",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))()
        -- The function that takes place when the button is pressed
    end
})

local Button = Tab:CreateButton({
    Name = "CTRL + click = TP",
    Callback = function()
        local UIS = game:GetService("UserInputService")
        local Player = game.Players.LocalPlayer
        local Mouse = Player:GetMouse()

        function GetCharacter()
            return game.Players.LocalPlayer.Character
        end

        function Teleport(pos)
            local Char = GetCharacter()
            if Char then
                Char:MoveTo(pos)
            end
        end

        UIS.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                Teleport(Mouse.Hit.p)
            end
        end)
    end
})

local Tab = Window:CreateTab("Misc", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
    Name = "Rejoin",
    Callback = function()
        Rayfield:Notify({
            Title = "",
            Content = "Rejoining...",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Okay!",
                    Callback = function()
                        print("The user tapped Okay!")
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
                    end
                }
            }
        })
    end
})

local Tab = Window:CreateTab("Settings", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
    Name = "Destroy GUI",
    Callback = function()
        Rayfield:Notify({
            Title = "We are sorry to see you go..",
            Content = "",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Eh",
                    Callback = function()
                        print("The user tapped Okay!")
                        Rayfield:Destroy()
                    end
                }
            }
        })
    end
})

local ColorPicker = Tab:CreateColorPicker({
    Name = "Color Picker",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end
})
